abline(h=0,v=0, col = "grey", lty = 2)
legend("topright", inset=c(0,0), rownames(la_mean_y)[i], bty = "n", text.font = 4, cex = 1.5)
}
legend("bottomright", inset=c(0,0), legend = c("Tadpoles (x10)", "Subadults (x5)", "Adults", "T & A", "S & A", "All"), fill = alpha(c("green", "blue", "red", "saddlebrown", "mediumslateblue", "maroon4"), 0.5), bty = "n")
cat("\n\n\\pagebreak\n")
#writeLines("ValueForV")
# plotting with log
par(mfrow = c(1,3), oma=c(0,0,2,0))
boxplot(larvae ~ year, subset(ndat, larvae > 0), log = "y", ylab="", main = "Tadpoles (when present)", las = 2, cex.axis=0.75)
mtext("LOG(Mean counts per year)", side=2, line=3, cex=0.8)
boxplot(subadults ~ year, subset(ndat, subadults > 0), log = "y", main = "Subadults (when present)", las = 2)
boxplot(adults ~ year, subset(ndat, adults > 0), log = "y", main = "Adults (when present)", las = 2)
# trying to plot all years, without LOG, real counts, until 2015:
write.table(ndat, file="ndat_raw.txt")
# --> I manually added three years with zero counts in Excel!
ndat.v2 <- read.delim("~/DusyBasin/Input_summaryStats/ndat_2015.txt")
par(mfrow = c(1,3), oma=c(0,0,2,0))
boxplot(larvae ~ year, data=ndat.v2, las = 2, ylab="", main="Tadpoles", cex.axis=0.75)
mtext("Mean counts per year", side=2, line=3, cex=0.8)
boxplot(subadults ~ year, data=ndat.v2, main = "Subadults", las = 2)
boxplot(adults ~ year, data=ndat.v2, main = "Adults", las = 2)
# for eggs take only breeding season:
data.breeding <- subset(ndat.v2, data$season=="b")
eg_mean_y_b <- tapply(data.breeding$eggs, list(data.breeding$year, data.breeding$site), mean, na.rm = TRUE)
ndat.egg <- data.frame(year = as.numeric(rep(rownames(eg_mean_y_b), times = dim(eg_mean_y_b)[2])), site = as.numeric(rep(colnames(eg_mean_y_b), each = dim(eg_mean_y_b)[1])), eggs = as.numeric(eg_mean_y_b))
summary(ndat.egg)
# First a plot of the eggs only from the breeding season:
par(mfrow = c(1,2), oma=c(0,0,2,0))
boxplot(eggs ~ year, data=ndat.egg, las = 2, ylab="Counts", ylim=c(-1,15), main="Mean counts per year")
title("Mean number of egg masses per year", outer=TRUE)
boxplot(eggs ~ year, subset(ndat, eggs > 0), log = "y", ylab = "LOG(Counts)", las = 2, main="LOG(Mean counts per year when present)")
par(mfrow = c(1,2), oma=c(0,0,2,0))
boxplot(eggs ~ year, data=ndat, las = 2, ylab="Counts", ylim=c(-1,15), main="Mean counts per year")
title("Mean number of egg masses per year", outer=TRUE)
boxplot(eggs ~ year, subset(ndat, eggs > 0), log = "y", ylab = "LOG(Counts)", las = 2, main="LOG(Mean counts per year when present)")
par(mfrow = c(3,1), mar = c(3,3,2,1), oma = c(2,2,0,0))
boxplot(larvae ~ site, subset(ndat, larvae > 0), log = "y", main = "Tadpoles (when present)", las = 2)
boxplot(subadults ~ site, subset(ndat, subadults > 0), log = "y", main = "Subadults (when present)", las = 2)
boxplot(adults ~ site, subset(ndat, adults > 0), log = "y", main = "Adults (when present)", las = 1)
mtext("LOG(Mean counts per site)", 2, 0, TRUE)
mtext("Sites", 1, 0, TRUE)
# Now trying to plot this also for ALL lakes!
par(mfrow = c(1,3), mar = c(3,3,2,1), oma = c(2,2,0,0))
boxplot(larvae ~ site, data=ndat, main = "Tadpoles", las = 2)
boxplot(subadults ~ site, data=ndat, main = "Subadults", las = 2)
boxplot(adults ~ site, data=ndat, main = "Adults", las = 1)
mtext("Mean counts per site", 2, 0, TRUE)
mtext("Sites", 1, 0, TRUE)
# And now an individual plot for the eggs, again first only for the breeding season:
quartz("", 12, 6)
par(mfrow = c(1,2), mar = c(3,3,2,1), oma = c(2,2,0,0))
boxplot(eggs ~ site, data=ndat.egg, main = "Egg masses", las = 2)
boxplot(eggs ~ site, subset(ndat, eggs > 0), log = "y", main = "LOG(Egg masses)", las = 2)
mtext("Sites", 1, 0, TRUE, cex=1.2)
mtext("Counts", 2, 0, TRUE, cex=1.2)
# And then for all seasons:
quartz("", 12, 6)
par(mfrow = c(1,2), mar = c(3,3,2,1), oma = c(2,2,0,0))
boxplot(eggs ~ site, data=ndat, main = "Egg masses", las = 2)
boxplot(eggs ~ site, subset(ndat, eggs > 0), log = "y", main = "LOG(Egg masses when present)", las = 2)
mtext("Sites", 1, 0, TRUE, cex=1.2)
mtext("Counts", 2, 0, TRUE, cex=1.2)
cat("\n\n\\pagebreak\n")
#writeLines("ValueForV")
# Hypothesis 1: Best lakes are larger lakes / but fish eat frogs
fish <- table(data$fish, data$site, data$year)
test <- fish[2,,] / (fish[1,,] + fish[2,,])
test <- apply(test, 1, mean, na.rm = TRUE)
fish2 <- table(data$fish, data$site)
test2 <- fish2[2,] / (fish2[1,] + fish2[2,])
par(mfrow = c(1,2), mar = c(5,4,1,1), las = 1)
boxplot(min_surf+1, log = "y", las = 2, ylab = "Minimal lake surface")
#barplot(t(test), beside = TRUE, ylab = "Proportion of observed fish")
barplot(rbind(test, test2), beside = TRUE, ylab = "Proportion of observed fish", las =2)
lake_quality <- data.frame(breed_larv, breed_eggs, lake = as.numeric(names(breed_larv)))
knitr::opts_knit$set(root.dir = "~/DusyBasin/Input_summaryStats/")
# Take hash away if you still need to install these libraries!
#install.packages(corrplot)
#install.packages(scales)
#install.packages(lme4)
#install.packages(lmerTest)
#install.packages(unmarked)
library(corrplot)
library(scales)
library(lme4)
library(lmerTest)
library(unmarked)
p.trans <- function(p) {
res <- as.numeric(NA, length(p))
for (i in 1:length(p)) {
if (p[i] > 0.1) res[i] <- "p > 0.05 [NS]"
if (p[i] > 0.05 & p[i] <= 0.1) res[i] <- "p < 0.1 [.]"
if (p[i] > 0.01 & p[i] <= 0.05) res[i] <- "p < 0.05 [*]"
if (p[i] > 0.001 & p[i] <= 0.01) res[i] <- "p < 0.01 [**]"
if (p[i] <= 0.001) res[i] <- "p < 0.001 [***]"
}
return(res)}
# Data
load(file = "~/DusyBasin/Input_summaryStats/data.frogs.Rdata")
# Selection of meaningful lakes only (30 and above are rivers)
data <- subset(data, site %in% c(1:11, 13:29))
# Defining new categories
data$frogs <- data$subadults + data$adults
data$juveniles <- data$metamorphs + data$premetamorphs
data$tadpoles <- data$larvae + data$juveniles
plot(log(data$eggs+1) ~ log(data$larvae+1))
pred <- loess(log(data$eggs+1) ~ log(data$larvae+1))
points(pred$fitted[order(data$larvae)] ~ log(data$larvae+1)[order(data$larvae)], type = "l", lwd = 2, col = "red")
# New dataset: pooling seasons per year and sites as mean numbers
eg_mean_y <- tapply(data$eggs, list(data$year, data$site), mean, na.rm = TRUE)
la_mean_y <- tapply(data$larvae, list(data$year, data$site), mean, na.rm = TRUE)
ju_mean_y <- tapply(data$juveniles, list(data$year, data$site), mean, na.rm = TRUE)
su_mean_y <- tapply(data$subadults, list(data$year, data$site), mean, na.rm = TRUE)
ad_mean_y <- tapply(data$adults, list(data$year, data$site), mean, na.rm = TRUE)
fr_mean_y <- tapply(data$frogs, list(data$year, data$site), mean, na.rm = TRUE)
ta_mean_y <- tapply(data$tadpoles, list(data$year, data$site), mean, na.rm = TRUE)
ndat <- data.frame(year = as.numeric(rep(rownames(eg_mean_y), times = dim(eg_mean_y)[2])), site = as.numeric(rep(colnames(eg_mean_y), each = dim(eg_mean_y)[1])), eggs = as.numeric(eg_mean_y), larvae = as.numeric(la_mean_y), tadpoles = as.numeric(ta_mean_y), juveniles = as.numeric(ju_mean_y), subadults = as.numeric(su_mean_y), adults = as.numeric(ad_mean_y), frogs = as.numeric(fr_mean_y))
summary(ndat)
# Year goodness of fit: proportion of lakes with eggs, larvae, juveniles, or adults
YGFeggs <- eg_mean_y
YGFeggs[eg_mean_y > 0] <- 1
YGFeggs <- apply(YGFeggs, 1, mean, na.rm = TRUE)
LGFeggs <- eg_mean_y
LGFeggs[eg_mean_y > 0] <- 1
LGFeggs <- apply(LGFeggs, 2, mean, na.rm = TRUE)
YGFlarvae <- la_mean_y
YGFlarvae[la_mean_y > 0] <- 1
YGFlarvae <- apply(YGFlarvae, 1, mean, na.rm = TRUE)
YGFjuveniles <- la_mean_y
YGFjuveniles[la_mean_y > 0] <- 1
YGFjuveniles <- apply(YGFjuveniles, 1, mean, na.rm = TRUE)
YGFadults <- ad_mean_y
YGFadults[ad_mean_y > 0] <- 1
YGFadults <- apply(YGFadults, 1, mean, na.rm = TRUE)
YGF <- rbind(YGFeggs, YGFlarvae, YGFjuveniles, YGFadults)
rownames(YGF) <- c("Eggs", "Tadpoles", "Subadults", "Adults")
# First I have to add three more years with no counts to the plotting dataset:
more.years <- matrix(c(0,0,0,0,0,0,0,0,0,0,0,0), nrow=4, ncol=3, byrow=TRUE)
rownames(more.years) <- c("Eggs", "Tadpoles", "Subadults", "Adults")
colnames(more.years) <- c("2013", "2014", "2015")
YGF <- as.matrix(YGF)
test <- cbind(YGF, more.years)
YGF <- test
par(mfrow = c(1,1), las = 2, mar = c(4,4,1,1))
barplot(YGF, beside = TRUE, legend = TRUE, ylim = c(0, 1), args.legend = list(x = "topright", bty = "n"), col = terrain.colors(4), ylab = "Proportion of occupied lakes")
data.breeding <- subset(data, data$season=="b")
eg_mean_y_b <- tapply(data.breeding$eggs, list(data.breeding$year, data.breeding$site), mean, na.rm = TRUE)
YGFeggs <- eg_mean_y_b
YGFeggs[eg_mean_y_b > 0] <- 1
YGFeggs <- apply(YGFeggs, 1, mean, na.rm = TRUE)
YGFlarvae <- la_mean_y
YGFlarvae[la_mean_y > 0] <- 1
YGFlarvae <- apply(YGFlarvae, 1, mean, na.rm = TRUE)
YGFjuveniles <- la_mean_y
YGFjuveniles[la_mean_y > 0] <- 1
YGFjuveniles <- apply(YGFjuveniles, 1, mean, na.rm = TRUE)
YGFadults <- ad_mean_y
YGFadults[ad_mean_y > 0] <- 1
YGFadults <- apply(YGFadults, 1, mean, na.rm = TRUE)
YGF <- rbind(YGFeggs, YGFlarvae, YGFjuveniles, YGFadults)
rownames(YGF) <- c("Eggs", "Tadpoles", "Subadults", "Adults")
# First I have to add three more years with no counts to the plotting dataset:
more.years <- matrix(c(0,0,0,0,0,0,0,0,0,0,0,0), nrow=4, ncol=3, byrow=TRUE)
rownames(more.years) <- c("Eggs", "Tadpoles", "Subadults", "Adults")
colnames(more.years) <- c("2013", "2014", "2015")
YGF <- as.matrix(YGF)
test <- cbind(YGF, more.years)
YGF <- test
par(mfrow = c(1,1), las = 2, mar = c(4,4,1,1))
barplot(YGF, beside = TRUE, legend = TRUE, ylim = c(0, 1), args.legend = list(x = "topright", bty = "n"), col = terrain.colors(4), ylab = "Proportion of occupied lakes")
YGFeggs <- eg_mean_y
YGFeggs[eg_mean_y > 0] <- 1
YGFeggs <- apply(YGFeggs, 1, mean, na.rm = TRUE)
LGFeggs <- eg_mean_y
LGFeggs[eg_mean_y > 0] <- 1
LGFeggs <- apply(LGFeggs, 2, mean, na.rm = TRUE)
YGFlarvae <- la_mean_y
YGFlarvae[la_mean_y > 0] <- 1
YGFlarvae <- apply(YGFlarvae, 1, mean, na.rm = TRUE)
YGFjuveniles <- la_mean_y
YGFjuveniles[la_mean_y > 0] <- 1
YGFjuveniles <- apply(YGFjuveniles, 1, mean, na.rm = TRUE)
YGFadults <- ad_mean_y
YGFadults[ad_mean_y > 0] <- 1
YGFadults <- apply(YGFadults, 1, mean, na.rm = TRUE)
YGF <- rbind(YGFeggs, YGFlarvae, YGFjuveniles, YGFadults)
rownames(YGF) <- c("Eggs", "Tadpoles", "Subadults", "Adults")
# First I have to add three more years with no counts to the plotting dataset:
more.years <- matrix(c(0,0,0,0,0,0,0,0,0,0,0,0), nrow=4, ncol=3, byrow=TRUE)
rownames(more.years) <- c("Eggs", "Tadpoles", "Subadults", "Adults")
colnames(more.years) <- c("2013", "2014", "2015")
YGF <- as.matrix(YGF)
test <- cbind(YGF, more.years)
YGF <- test
par(mfrow = c(1,1), las = 2, mar = c(4,4,1,1))
barplot(YGF, beside = TRUE, legend = TRUE, ylim = c(0, 1), args.legend = list(x = "topright", bty = "n"), col = c("white", "green", "cornflowerblue", "coral1"), ylab = "Proportion of occupied lakes")
# for eggs take only breeding season:
data.breeding <- subset(data, data$season=="b")
eg_mean_y_b <- tapply(data.breeding$eggs, list(data.breeding$year, data.breeding$site), mean, na.rm = TRUE)
YGFeggs <- eg_mean_y_b
YGFeggs[eg_mean_y_b > 0] <- 1
YGFeggs <- apply(YGFeggs, 1, mean, na.rm = TRUE)
YGFlarvae <- la_mean_y
YGFlarvae[la_mean_y > 0] <- 1
YGFlarvae <- apply(YGFlarvae, 1, mean, na.rm = TRUE)
YGFjuveniles <- la_mean_y
YGFjuveniles[la_mean_y > 0] <- 1
YGFjuveniles <- apply(YGFjuveniles, 1, mean, na.rm = TRUE)
YGFadults <- ad_mean_y
YGFadults[ad_mean_y > 0] <- 1
YGFadults <- apply(YGFadults, 1, mean, na.rm = TRUE)
YGF <- rbind(YGFeggs, YGFlarvae, YGFjuveniles, YGFadults)
rownames(YGF) <- c("Eggs", "Tadpoles", "Subadults", "Adults")
# First I have to add three more years with no counts to the plotting dataset:
more.years <- matrix(c(0,0,0,0,0,0,0,0,0,0,0,0), nrow=4, ncol=3, byrow=TRUE)
rownames(more.years) <- c("Eggs", "Tadpoles", "Subadults", "Adults")
colnames(more.years) <- c("2013", "2014", "2015")
YGF <- as.matrix(YGF)
test <- cbind(YGF, more.years)
YGF <- test
YGF[1,2]<- 0.7
YGF[1,13]<- 0
YGF[1,14]<- 0
YGF[1,15]<- 0
par(mfrow = c(1,1), las = 2, mar = c(4,4,1,1))
barplot(YGF, beside = TRUE, legend = TRUE, ylim = c(0, 1), args.legend = list(x = "topright", bty = "n"), col = terrain.colors(4), ylab = "Proportion of occupied lakes")
snow2 <- subset(season_length, season == "winter")[,-4]
names(snow2) <- c("w.start", "w.end", "year", "w.dur")
snow2$year <- 1989:2016
snow3 <- subset(season_length, season == "summer")[,-4]; names(snow3) <- c("s.start", "s.end", "year", "s.dur")
names(snow3) <- c("s.start", "s.end", "year", "s.dur")
snow3$year <- 1989:2017
snow2 <- merge(snow2, snow3, all = TRUE)
snow2$snow.max <- tapply(dsnow$watcont, dsnow$year, max, na.rm = TRUE)[-1]
par(mfrow = c(2,2), las = 1, mar = c(3,4,1,1))
plot(watcont ~ date, dsnow, type = "l", ylab = "Water Content Equivalent")
plot(tapply(dsnow$watcont, dsnow$year, max, na.rm = TRUE) ~ c(1988:2017), type = "b", pch = 17, ylab = "Maximal snow")
plot(duration ~ year, subset(season_length, season == "winter"), type = "b", pch = 16, ylab = "Winter duration")
abline(lm(duration ~ year, subset(season_length, season == "winter")))
plot(duration ~ year, subset(season_length, season == "summer"), type = "b", pch = 17, ylab = "Summer duration")
abline(lm(duration ~ year, subset(season_length, season == "summer")))
par(las = 1, mar = c(5,4,1,1), mfrow = c(2,1))
plot(SnHe_cm ~ Year, snow, type = "b", pch = 16)
boxplot(SnHe_cm ~ Year, snow, type = "b", pch = 16)
# Snow resampling (1 value per year)
boot = 100
years <- unique(snow$Year)
bootsnow <- matrix(NA, boot, length(years))
delta_snow <- NA
t0 <- Sys.time()
for (i in 1:boot) {
for (j in 1:length(years)) {
interm <- subset(snow, Year == years[j])$SnHe_cm
if (length(interm) > 1) bootsnow[i,j] <- sample(x = as.numeric(subset(snow, Year == years[j])$SnHe_cm), size = 1)
else bootsnow[i,j] <- interm
}
res <- lm(bootsnow[i,] ~ years)
delta_snow[i] <- coef(res)[2]
}
Sys.time()-t0
hist(delta_snow)
mean(delta_snow); sd(delta_snow)
t.test(delta_snow)
# Snow averaging (1 value per year)
snow.year <- tapply(snow$SnHe_cm, snow$Year, mean)
snow.year2 <- tapply(snow$SnHe_cm, snow$year2, mean)
snow.min <- tapply(snow$SnHe_cm, snow$Year, min)
snow.min2 <- tapply(snow$SnHe_cm, snow$year2, min)
snow.max <- tapply(snow$SnHe_cm, snow$Year, max)
snow.max2 <- tapply(snow$SnHe_cm, snow$year2, max)
par(las = 1, mar = c(4,4,1,1))
plot(snow.year ~ as.numeric(names(snow.year)), pch = 16, type = "n", ylim = c(0, 500), ylab = "Snow height [cm]", xlab = "Time [year]")
abline(v = c(194:202)*10, lty = 2)
polygon(c(years, rev(years)), c(snow.min, rev(snow.max)), col = "grey")
points(snow.year ~ as.numeric(names(snow.year)), pch = 16, type = "b")
abline(h = 100)
arrows(1961.5, 80, 1974.5, 80, lwd = 2, code = 3)
arrows(1977.5, 80, 1986.5, 80, lwd = 2, code = 3)
arrows(1992.5, 80, 2000.5, 80, lwd = 2, code = 3)
arrows(2001.5, 80, 2006.5, 80, lwd = 2, code = 3)
arrows(2007.5, 80, 2011.5, 80, lwd = 2, code = 3)
text(c(1967.5, 1981.5, 1996, 2004, 2010), y = 70, c(13,9,8,5, 4))
snowheight <- data.frame(years, snow.year, snow.min, snow.max)
res <- lm(snow.year ~ years, subset(snowheight, years %in% 1958:2015));summary(res)
res <- lm(snow.min ~ years, subset(snowheight, years %in% 1958:2015));summary(res)
res <- lm(snow.max ~ years, subset(snowheight, years %in% 1958:2015));summary(res)
res <- lm(snow.year2 ~ as.numeric(names(snow.year2)));summary(res)
res <- lm(snow.min2 ~ as.numeric(names(snow.year2)));summary(res)
res <- lm(snow.max2 ~ as.numeric(names(snow.year2)));summary(res)
plot(snow.year2 ~ as.numeric(names(snow.year2)), pch = 16, type = "b", ylim = c(0, 500))
points(snow.min2 ~ as.numeric(names(snow.year2)), type = "l")
points(snow.max2 ~ as.numeric(names(snow.year2)), type = "l")
#-----------------------------------
# Graphs
#-----------------------------------
boxplot(SnHe_cm ~ Year, subset(snow, Year > 1900))
abline(h = 100, col = "red")
#quartz("", 10, 7)
par(mfrow = c(1,1), las = 1, mar = c(2,4,0,1), oma = c(1,1,1,1))
plot(SnHe_cm ~ Time, snow, type = "n", ylab = "Snow cover [cm]", pch = 16)
abline(h = c(1:10)*50, lty = 2, col = "grey")
abline(v = c(194:202)*10, lty = 2, col = "grey")
points(SnHe_cm ~ Time, snow, type = "p", ylab = "Snow cover [cm]", pch = 16)
points(lowess(snow$SnHe_cm)$y ~ snow$Time, col = "red", lwd = 2, type = "l")
res <- lm(SnHe_cm ~ Time, snow); summary(res)
abline(res)
legend("topleft", p.trans(coef(summary(res))[2,4]), bty = "n")
par(mfrow = c(3,1), las = 1, mar = c(2,4,0,1), oma = c(1,1,1,1))
plot(snow.year ~ as.numeric(names(snow.year)), type = "b", ylab = "Mean snow cover")
points(lowess(snow.year)$y ~ as.numeric(names(snow.year)), col = "red", lwd = 2, type = "l")
res <- lm(snow.year ~ as.numeric(names(snow.year))); summary(res)
abline(res)
legend("topleft", p.trans(coef(summary(res))[2,4]), bty = "n")
plot(snow.min ~ as.numeric(names(snow.year)), type = "b", ylab = "Min snow cover")
points(lowess(snow.min)$y ~ as.numeric(names(snow.year)), col = "red", lwd = 2, type = "l")
res <- lm(snow.min ~ as.numeric(names(snow.year))); summary(res)
abline(res)
legend("topleft", p.trans(coef(summary(res))[2,4]), bty = "n")
plot(snow.max ~ as.numeric(names(snow.year)), type = "b", ylab = "Max snow cover")
points(lowess(snow.max)$y ~ as.numeric(names(snow.year)), col = "red", lwd = 2, type = "l")
res <- lm(snow.max ~ as.numeric(names(snow.year))); summary(res)
abline(res)
legend("topleft", p.trans(coef(summary(res))[2,4]), bty = "n")
d <- as.dist(dist)
mds.coor <- cmdscale(d)
mds.coor <- mds.coor[c(1,2,4,5,6,7,9,13),]
par(mar = c(0,0,0,0), mfrow = c(3,5))
for (i in 1:dim(ad_mean_y)[1]) {
plot(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = la_mean_y[i,c(1,2,4,5:7,9,12)]/50, bg = alpha("green", 0.5), xlim = c(-350, 400), ylim = c(-350, 250), xaxt = "n", yaxt = "n")
points(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = ju_mean_y[i,c(1,2,4,5:7,9,12)]/25, bg = alpha("blue", 0.5))
points(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = ad_mean_y[i,c(1,2,4,5:7,9,12)]/5, bg = alpha("red", 0.5))
text(mds.coor[,1], -mds.coor[,2], rownames(mds.coor), font = 2)
abline(h=0,v=0, col = "grey", lty = 2)
legend("topright", rownames(la_mean_y)[i], bty = "n", text.font = 4)
}
#legend("bottomright", legend = c("Larvae (x10)", "Juveniles (x5)", "Adults"), fill = alpha(c("green", "blue", "red"), 0.5), bty = "n")
# And with a legend:
d <- as.dist(dist)
mds.coor <- cmdscale(d)
mds.coor <- mds.coor[c(1,2,4,5,6,7,9,13),]
#quartz("", 11, 7)
par(mar = c(0,0,0,0), mfrow = c(3,5))
for (i in 1:dim(ad_mean_y)[1]) {
plot(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = la_mean_y[i,c(1,2,4,5:7,9,12)]/50, bg = alpha("green", 0.5), xlim = c(-350, 400), ylim = c(-350, 210), xaxt = "n", yaxt = "n")
points(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = ju_mean_y[i,c(1,2,4,5:7,9,12)]/21, bg = alpha("blue", 0.5))
points(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = ad_mean_y[i,c(1,2,4,5:7,9,12)]/5, bg = alpha("red", 0.5))
a <- mds.coor[,1]+25
b <- -mds.coor[,2]+25
text(a,b, rownames(mds.coor), font = 2, cex=1.2)
abline(h=0,v=0, col = "grey", lty = 2)
legend("topright", rownames(la_mean_y)[i], bty = "n", text.font = 4)
legend("bottomright", legend = c("Tadpoles (x10)", "Subadults (x5)", "Adults", "Tadpoles (x10) & Adults", "Subadults (x5) & Adults", "Everything"), fill = alpha(c("green", "blue", "red", "saddlebrown", "mediumslateblue", "maroon4"), 0.5), bty = "n")
}
# Can I place the legend somewhere else?
d <- as.dist(dist)
mds.coor <- cmdscale(d)
mds.coor <- mds.coor[c(1,2,4,5,6,7,9,13),]
par(mar = c(0,0,0,0), mfrow = c(3,5))
for (i in 1:dim(ad_mean_y)[1]) {
plot(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = la_mean_y[i,c(1,2,4,5:7,9,12)]/50, bg = alpha("green", 0.5), xlim = c(-350, 400), ylim = c(-350, 210), xaxt = "n", yaxt = "n")
points(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = ju_mean_y[i,c(1,2,4,5:7,9,12)]/21, bg = alpha("blue", 0.5))
points(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = ad_mean_y[i,c(1,2,4,5:7,9,12)]/5, bg = alpha("red", 0.5))
a <- mds.coor[,1]+25
b <- -mds.coor[,2]+25
text(a,b, rownames(mds.coor), font = 2, cex=1.2)
abline(h=0,v=0, col = "grey", lty = 2)
legend("topright", inset=c(0,0), rownames(la_mean_y)[i], bty = "n", text.font = 4)
}
legend("bottomright", inset=c(0,0), legend = c("Tadpoles (x10)", "Subadults (x5)", "Adults", "T & A", "S & A", "All"), fill = alpha(c("green", "blue", "red", "saddlebrown", "mediumslateblue", "maroon4"), 0.5), bty = "n")
# A little bit more polishing:
d <- as.dist(dist)
mds.coor <- cmdscale(d)
mds.coor <- mds.coor[c(1,2,4,5,6,7,9,13),]
par(mar = c(0,0,0,0), mfrow = c(5,3))
for (i in 1:dim(ad_mean_y)[1]) {
plot(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = la_mean_y[i,c(1,2,4,5:7,9,12)]/50, bg = alpha("green", 0.5), xlim = c(-350, 450), ylim = c(-400, 270), xaxt = "n", yaxt = "n")
points(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = ju_mean_y[i,c(1,2,4,5:7,9,12)]/21, bg = alpha("blue", 0.5))
points(mds.coor[,1], -mds.coor[,2], type="p", xlab="", ylab="", pch = 21, cex = ad_mean_y[i,c(1,2,4,5:7,9,12)]/5, bg = alpha("red", 0.5))
a <- mds.coor[,1]+25
b <- -mds.coor[,2]+25
text(a,b, rownames(mds.coor), font = 2, cex=1.2)
abline(h=0,v=0, col = "grey", lty = 2)
legend("topright", inset=c(0,0), rownames(la_mean_y)[i], bty = "n", text.font = 4, cex = 1.5)
}
legend("bottomright", inset=c(0,0), legend = c("Tadpoles (x10)", "Subadults (x5)", "Adults", "T & A", "S & A", "All"), fill = alpha(c("green", "blue", "red", "saddlebrown", "mediumslateblue", "maroon4"), 0.5), bty = "n")
# plotting with log
par(mfrow = c(1,3), oma=c(0,0,2,0))
boxplot(larvae ~ year, subset(ndat, larvae > 0), log = "y", ylab="", main = "Tadpoles (when present)", las = 2, cex.axis=0.75)
mtext("LOG(Mean counts per year)", side=2, line=3, cex=0.8)
boxplot(subadults ~ year, subset(ndat, subadults > 0), log = "y", main = "Subadults (when present)", las = 2)
boxplot(adults ~ year, subset(ndat, adults > 0), log = "y", main = "Adults (when present)", las = 2)
# trying to plot all years, without LOG, real counts, until 2015:
write.table(ndat, file="ndat_raw.txt")
# --> I manually added three years with zero counts in Excel!
ndat.v2 <- read.delim("~/DusyBasin/Input_summaryStats/ndat_2015.txt")
par(mfrow = c(1,3), oma=c(0,0,2,0))
boxplot(larvae ~ year, data=ndat.v2, las = 2, ylab="", main="Tadpoles", cex.axis=0.75)
mtext("Mean counts per year", side=2, line=3, cex=0.8)
boxplot(subadults ~ year, data=ndat.v2, main = "Subadults", las = 2)
boxplot(adults ~ year, data=ndat.v2, main = "Adults", las = 2)
# for eggs take only breeding season:
data.breeding <- subset(ndat.v2, data$season=="b")
eg_mean_y_b <- tapply(data.breeding$eggs, list(data.breeding$year, data.breeding$site), mean, na.rm = TRUE)
ndat.egg <- data.frame(year = as.numeric(rep(rownames(eg_mean_y_b), times = dim(eg_mean_y_b)[2])), site = as.numeric(rep(colnames(eg_mean_y_b), each = dim(eg_mean_y_b)[1])), eggs = as.numeric(eg_mean_y_b))
summary(ndat.egg)
# First a plot of the eggs only from the breeding season:
par(mfrow = c(1,2), oma=c(0,0,2,0))
boxplot(eggs ~ year, data=ndat.egg, las = 2, ylab="Counts", ylim=c(-1,15), main="Mean counts per year")
title("Mean number of egg masses per year", outer=TRUE)
boxplot(eggs ~ year, subset(ndat, eggs > 0), log = "y", ylab = "LOG(Counts)", las = 2, main="LOG(Mean counts per year when present)")
par(mfrow = c(1,2), oma=c(0,0,2,0))
boxplot(eggs ~ year, data=ndat, las = 2, ylab="Counts", ylim=c(-1,15), main="Mean counts per year")
title("Mean number of egg masses per year", outer=TRUE)
boxplot(eggs ~ year, subset(ndat, eggs > 0), log = "y", ylab = "LOG(Counts)", las = 2, main="LOG(Mean counts per year when present)")
par(mfrow = c(3,1), mar = c(3,3,2,1), oma = c(2,2,0,0))
boxplot(larvae ~ site, subset(ndat, larvae > 0), log = "y", main = "Tadpoles (when present)", las = 2)
boxplot(subadults ~ site, subset(ndat, subadults > 0), log = "y", main = "Subadults (when present)", las = 2)
boxplot(adults ~ site, subset(ndat, adults > 0), log = "y", main = "Adults (when present)", las = 1)
mtext("LOG(Mean counts per site)", 2, 0, TRUE)
mtext("Sites", 1, 0, TRUE)
# Now trying to plot this also for ALL lakes!
par(mfrow = c(1,3), mar = c(3,3,2,1), oma = c(2,2,0,0))
boxplot(larvae ~ site, data=ndat, main = "Tadpoles", las = 2)
boxplot(subadults ~ site, data=ndat, main = "Subadults", las = 2)
boxplot(adults ~ site, data=ndat, main = "Adults", las = 1)
mtext("Mean counts per site", 2, 0, TRUE)
mtext("Sites", 1, 0, TRUE)
# And now an individual plot for the eggs, again first only for the breeding season:
quartz("", 12, 6)
par(mfrow = c(1,2), mar = c(3,3,2,1), oma = c(2,2,0,0))
boxplot(eggs ~ site, data=ndat.egg, main = "Egg masses", las = 2)
boxplot(eggs ~ site, subset(ndat, eggs > 0), log = "y", main = "LOG(Egg masses)", las = 2)
mtext("Sites", 1, 0, TRUE, cex=1.2)
mtext("Counts", 2, 0, TRUE, cex=1.2)
# And then for all seasons:
quartz("", 12, 6)
par(mfrow = c(1,2), mar = c(3,3,2,1), oma = c(2,2,0,0))
boxplot(eggs ~ site, data=ndat, main = "Egg masses", las = 2)
boxplot(eggs ~ site, subset(ndat, eggs > 0), log = "y", main = "LOG(Egg masses when present)", las = 2)
mtext("Sites", 1, 0, TRUE, cex=1.2)
mtext("Counts", 2, 0, TRUE, cex=1.2)
# Hypothesis 1: Best lakes are larger lakes / but fish eat frogs
fish <- table(data$fish, data$site, data$year)
test <- fish[2,,] / (fish[1,,] + fish[2,,])
test <- apply(test, 1, mean, na.rm = TRUE)
fish2 <- table(data$fish, data$site)
test2 <- fish2[2,] / (fish2[1,] + fish2[2,])
par(mfrow = c(1,2), mar = c(5,4,1,1), las = 1)
boxplot(min_surf+1, log = "y", las = 2, ylab = "Minimal lake surface")
# Lake breeding quality
eg_max_y <- tapply(data$eggs, list(data$year, data$site), max, na.rm = TRUE)
breed_eggs <- apply(eg_max_y, 2, mean, na.rm = TRUE) / sum(apply(eg_max_y, 2, mean, na.rm = TRUE))
la_max_y <- tapply(data$larvae, list(data$year, data$site), max, na.rm = TRUE)
breed_larv <- apply(la_max_y, 2, mean, na.rm = TRUE) / sum(apply(la_max_y, 2, mean, na.rm = TRUE))
#quartz("", 12, 5)
par(mfrow = c(1,2), mar = c(5,4,1,1))
barplot(rbind(breed_eggs, breed_larv), beside = TRUE, las = 2)
mtext("Average number of egg masses / larvae (standardized)", 2, 3, las = 0)
plot(breed_larv[-c(9, 11, 13)] ~ apply(min_surf, 2, mean, na.rm = TRUE), pch = 16, log = "x", xlab = "Lake surface", xlim = c(0.3, 150000))
points(breed_eggs[-c(9,11,13)] ~ apply(min_surf, 2, mean, na.rm = TRUE), pch = 17, log = "x")
text(apply(min_surf, 2, mean, na.rm = TRUE), breed_larv[-c(9,11,13)], paste("Lake n°", names(breed_eggs[-c(9,11,13)])), pos = c(3, 4, 4, 4, 4, 4,3 , 4,3 ,4 , 4))
# Hypothesis 1: Best lakes are larger lakes / but fish eat frogs
fish <- table(data$fish, data$site, data$year)
test <- fish[2,,] / (fish[1,,] + fish[2,,])
test <- apply(test, 1, mean, na.rm = TRUE)
fish2 <- table(data$fish, data$site)
test2 <- fish2[2,] / (fish2[1,] + fish2[2,])
par(mfrow = c(1,2), mar = c(5,4,1,1), las = 1)
boxplot(min_surf+1, log = "y", las = 2, ylab = "Minimal lake surface")
#barplot(t(test), beside = TRUE, ylab = "Proportion of observed fish")
barplot(rbind(test, test2), beside = TRUE, ylab = "Proportion of observed fish", las =2)
lake_quality <- data.frame(breed_larv, breed_eggs, lake = as.numeric(names(breed_larv)))
prop_fish <- data.frame(prop_fish = test, lake = as.numeric(names(test)))
surface <- data.frame(surf.min = apply(min_surf, 2, mean, na.rm = TRUE), surf.mean = apply(mean_surf, 2, mean, na.rm = TRUE), surf.max = apply(max_surf, 2, max, na.rm = TRUE), lake = as.numeric(colnames(mean_surf)))
lake_quality <- merge(lake_quality, prop_fish)
lake_quality <- merge(lake_quality, surface)
lake_quality <- lake_quality[order(lake_quality$lake),]
lake_quality$fish <- "fishless"
lake_quality$fish[lake_quality$lake %in% c(1,3)] <- "fishes"
# Lake 1, lake 3, early (lake 20 - fish died in 2000)
par(las = 1, plt = c(0,0.7, 0, 1), oma = c(4,5,1,1))
plot(breed_larv ~ surf.max, subset(lake_quality, fish == "fishless"), pch = 16, ylab = "", xlab = "", ylim = c(0, 0.5), xlim = c(0, 2800))
points(breed_eggs ~ surf.max, lake_quality, pch = 17)
res <- lm(breed_larv ~ surf.max + I(surf.max^2), subset(lake_quality, fish == "fishless"))
res <- lm(breed_larv ~ I(surf.max^2), subset(lake_quality, fish == "fishless"))
pred <- predict(res, newdata = data.frame(surf.max = c(0:3000)))
points(pred ~ c(0:3000), type = "l")
text(lake_quality$surf.max, lake_quality$breed_larv, lake_quality$lake, pos = c(rep(3, 7), 4, rep(3, 3)))
points(breed_larv ~ surf.max, subset(lake_quality, fish == "fishes"), pch = 1)
par(las = 1, plt = c(0.72,1, 0, 1), new = TRUE)
plot(breed_larv ~ surf.max, lake_quality, pch = 1, ylab = "", xlab = "", ylim = c(0, 0.5), xlim = c(50500, 51500), yaxt = "n", xaxt = "n")
axis(1, at = c(50500, 51000, 51500))
text(lake_quality$surf.max, lake_quality$breed_larv, lake_quality$lake, pos = 3)
mtext("Average number of tadpoles (standardized)", 2, 3, TRUE, las = 0)
mtext(expression(paste("Lake surface [", m^2, "]", sep = "")), 1, 3, TRUE)
# And as Steve Beissinger suggested let's try to also plot number of tadpoles in logarithm:
par(las = 1, plt = c(0,0.7, 0, 1), oma = c(4,5,1,1))
breed_larv <- log(breed_larv)
plot(breed_larv ~ surf.max, subset(lake_quality, fish == "fishless"), pch = 16, ylab = "", xlab = "", ylim = c(0, 0.5), xlim = c(0, 2800))
# points(breed_eggs ~ surf.max, lake_quality, pch = 17)
res <- lm(breed_larv ~ surf.max + I(surf.max^2), subset(lake_quality, fish == "fishless"))
res <- lm(breed_larv ~ I(surf.max^2), subset(lake_quality, fish == "fishless"))
pred <- predict(res, newdata = data.frame(surf.max = c(0:3000)))
points(pred ~ c(0:3000), type = "l")
text(lake_quality$surf.max, lake_quality$breed_larv, lake_quality$lake, pos = c(rep(3, 7), 4, rep(3, 3)))
points(breed_larv ~ surf.max, subset(lake_quality, fish == "fishes"), pch = 1)
par(las = 1, plt = c(0.72,1, 0, 1), new = TRUE)
plot(breed_larv ~ surf.max, lake_quality, pch = 1, ylab = "", xlab = "", ylim = c(0, 0.5), xlim = c(50500, 51500), yaxt = "n", xaxt = "n")
axis(1, at = c(50500, 51000, 51500))
text(lake_quality$surf.max, lake_quality$breed_larv, lake_quality$lake, pos = 3)
mtext("Average number of tadpoles (standardized)", 2, 3, TRUE, las = 0)
mtext(expression(paste("Lake surface [", m^2, "]", sep = "")), 1, 3, TRUE)
