source("Scripts/Functions/egg_umf.R")
source("Scripts/Functions/larvae_umf.R")
source("Scripts/Functions/frog_umf.R")
egg_umf()
larvae_umf()
frog_pc_umf()
## Set up unmarked dataframes for the three model types
source("Scripts/Functions/egg_umf.R")
egg_umf()
source("Scripts/Functions/larvae_umf.R")
larvae_umf()
source("Scripts/Functions/frog_umf.R")
source("Scripts/Functions/frog_umf.R")
frog_umf()
## Models of abundance
source("Scripts/Functions/Egg_model.R")
egg_model()
## Models of abundance
source("Scripts/Functions/Egg_model.R")
egg_model()
source("Scripts/Functions/Larvae_model.R")
larvae_model()
source("Scripts/Functions/Frog_model.R")
frog_model()
## Tabulate parameter estiamtes
source("Scripts/Functions/PCTabs.R")
PCTabs()
## Tabulate parameter estiamtes
source("Scripts/Functions/PCTabs.R")
PCTabs()
## Predictions for each lake and depth, size, dryness characteristics
source("Scripts/Functions/LakePreds.R")
LakePreds()
## Predictions for each lake and depth, size, dryness characteristics
source("Scripts/Functions/LakePreds.R")
LakePreds()
## Marginal Effects plots
source("Scripts/Functions/MEPlots.R")
me_plots()
library(ggrepel)
## Marginal Effects plots
source("Scripts/Functions/MEPlots.R")
me_plots()
library(tidyverse)
library(unmarked)
library(cowplot)
## Bring in models
load("Models/egg_mod.RData")
load("Models/larv_mod.RData")
load("Models/frog_pc_mod.RData")
## And just predict for one year
sc.stand <- select(sc.stand, year, lake, fish, depth, surf_lm) %>%
## Get year factors to match
mutate(year = 2000,
year = factor(year, levels(factor(frog_pcm@data@siteCovs$year)))) %>%
unique()
sc.s.egg <- mutate(sc.stand,
year = factor(year, levels(factor(egg_m@data@siteCovs$year))))
## Make predictions to actual lakes
pred_real <- predict(egg_m, sc.s.egg, type = "state")
pred_real2 <- predict(larv_m, sc.stand, type = "state")
pred_real3 <- predict(frog_pcm, sc.stand, type = "state")
## Get summary stats for observations
mn_obs <- group_by(eggs_obs, lake, year) %>%
summarise(max_cnt = max(eggs)) %>%
group_by(lake) %>%
summarise(mean_naive = mean(max_cnt),
min_naive = min(max_cnt),
max_naive = max(max_cnt))
mn_obs2 <- group_by(larvae_obs, lake, year) %>%
summarise(max_cnt = max(larvae)) %>%
group_by(lake) %>%
summarise(mean_naive = mean(max_cnt),
min_naive = min(max_cnt),
max_naive = max(max_cnt))
mn_obs3 <- group_by(frogs_pc_obs, lake, year) %>%
summarise(max_cnt = max(frogs)) %>%
group_by(lake) %>%
summarise(mean_naive = mean(max_cnt, na.rm = T),
min_naive = min(max_cnt, na.rm = T),
max_naive = max(max_cnt, na.rm = T))
plot_data0 <- select(sc.s.egg, lake, fish) %>%
cbind(pred_real) %>%
unique() %>%
merge(mn_obs) %>%
mutate(stage = "eggs")
plot_data2 <- select(sc.stand, lake, fish) %>%
cbind(pred_real2) %>%
unique() %>%
merge(mn_obs2) %>%
mutate(stage = "larvae",
upper = ifelse(upper > 7000, 7000, upper))
plot_data3 <- select(sc.stand, lake, fish) %>%
cbind(pred_real3) %>%
unique() %>%
merge(mn_obs3) %>%
mutate(stage = "frogs",
upper = ifelse(upper > 450, 450, upper))
plot_data <- bind_rows(plot_data0, plot_data2, plot_data3) %>%
mutate(lake = factor(lake),
stage = factor(stage, levels = c("eggs", "larvae", "frogs"),
labels = c("Eggs", "Tadpoles", "Frogs")))
p1 <- ggplot(plot_data, aes(lake, Predicted, color = factor(fish))) +
facet_wrap(~factor(stage), ncol = 3, scales = "free") +
geom_errorbar(aes(ymin=lower, ymax=upper), size = 2, width=0, alpha=0.5) +
geom_point(shape=19, alpha=0.9, size=4) +
scale_color_manual(name = "Fish Present",
breaks = c(0, 1),
labels = c("No", "Yes"),
values = c("steelblue", "grey70")) +
theme(legend.position = c(-.04,-.11),
legend.direction = "horizontal",
text = element_text(size = 10), title = element_text(size = 10),
axis.text = element_text(size = 10)) +
ylab("Predicted Abundance") + xlab("Lake Number") +
coord_flip()
## Add surface area and depth values
covs <- select(sc.orig, lake, proplake_dry, depth, surf_lm) %>%
unique() %>%
mutate(lake = factor(lake)) %>%
gather(key = attribute, value = value, -lake) %>%
mutate(attribute = factor(attribute,
levels = c("surf_lm", "depth", "proplake_dry"),
labels = c("Area (sq m)", "Depth (m)", "Prop Dry Yrs")))
p2 <- ggplot(covs, aes(x = lake, y = value)) +
facet_wrap(~factor(attribute), ncol = 3, scales = "free") +
geom_bar(stat = "identity") +
xlab("Lake Number") +
ylab(NULL) +
theme(text = element_text(size = 12), title = element_text(size = 12),
axis.text = element_text(size = 10)) +
coord_flip()
?save_plot
?ggsave
save_plot("Figures/LakePreds.png", p1, base_width = 8, base_height = 4, dpi = 600)
save_plot("Figures/LakeChars.png", p2, base_width = 8, base_height = 4, dpi = 600)
library(unmarked)
library(tidyverse)
library(cowplot)
library(ggrepel)
## Read in models and data
load("Models/egg_mod.RData")
load("Models/larv_mod.RData")
load("Models/frog_pc_mod.RData")
## Set up regression plotting subfunction for each model
f1_reg <- function(m, pred, type, ylab, xlab, ylim, lpos) {
## Pull out parameter names
state_pars <- names(m@estimates@estimates$state@estimates)
det_pars <- names(m@estimates@estimates$det@estimates)
## Make sequence on original scale to predict to
seq_orig <- seq(min(sc.orig[,pred]), max(sc.orig[,pred]), length.out = 30)
## Standardize
mp <- sc.orig[,pred] %>%
unique() %>%
mean()
sdp <- sc.orig[,pred] %>%
unique() %>%
sd()
seq_stand <- sapply(seq_orig, function(x) (x - mp) / sdp)
## Create new dataframe, where all other predictors are kept at their mean values
new_data <- expand.grid(fish = c(0, 1), seq_stand = seq_stand) %>%
## Add original sequence
merge(data.frame(seq_stand = seq_stand, seq_orig = seq_orig))
## insert appropriate column name for prediction
names(new_data)[names(new_data) == "seq_stand"] <- pred
## Set up empty dataframe to add to new data
new_pars <- c(state_pars, det_pars)
new_pars <- new_pars[!(new_pars %in% c("(Intercept)", "julian2", pred))]
empty_df <- matrix(ncol = length(new_pars), nrow = 0) %>%
data.frame() %>%
setNames(new_pars)
new_data <- merge(new_data, empty_df, all.x = T)
new_data[is.na(new_data)] <- 0
new_data$julian2 <- new_data$julian^2
## Make some predictions
preds <- predict(m, type = type, newdata = new_data) %>%
bind_cols(new_data) %>%
mutate(fish = factor(fish))
## Get z-matrix
z_mat <- predict(m, type = type) %>%
bind_cols(m@data@siteCovs) %>%
select(Predicted:year) %>%
mutate(year = as.integer(as.character(year))) %>%
merge(sc.orig) %>%
mutate_(pred_orig = pred) %>%
mutate(fish = as.factor(fish),
## Get observed
obs = apply(m@data@y, 1, max, na.rm = T),
lakeid = paste0("Lake ", lake)) %>%
select(lakeid, lake, Predicted, SE, lower, upper, fish, depth, pred_orig) %>%
unique()
## Plot it
ggplot(preds, aes(x = seq_orig, y = Predicted, fill = fish)) +
geom_line(size = 2) +
geom_ribbon(aes(ymin=lower, ymax=upper), alpha=0.4, color = NA) +
scale_fill_manual(name = "Fish Present",
breaks = c(0, 1),
labels = c("No", "Yes"),
values = c("steelblue", "grey70")) +
theme(legend.position=lpos,
text = element_text(size = 10),
axis.title = element_text(size = 12)) +
xlab(xlab) +
ylab(ylab) +
coord_cartesian(ylim = c(0, z_mat$Predicted)) +
## Add predictions
geom_point(data = z_mat,
mapping = aes(x = pred_orig, y = Predicted, color = fish),
size = 2, shape = 19, alpha = 0.9) +
scale_color_manual(name = NULL,
breaks = NULL,
values = c("steelblue", "grey70")) +
## label the outlier
geom_text_repel(data = filter(z_mat, lake == 1),
aes(x = pred_orig, y = Predicted, label = lakeid))
}
## Build the plots
## Eggs
p1 <- f1_reg(m = egg_m, pred = "surf_lm", type = "state", lpos = "none",
ylab = "Egg Abundance", xlab = NULL)
p2 <- f1_reg(m = egg_m, pred = "depth", type = "state", lpos = c(.45,.85),
ylab = NULL, xlab = NULL)
## Larvae
p3 <- f1_reg(m = larv_m, pred = "surf_lm", type = "state", lpos = "none",
ylab = "Tadpole Abundance", xlab = NULL)
p4 <- f1_reg(m = larv_m, pred = "depth", type = "state", lpos = "none",
ylab = NULL, xlab = NULL)
## Frogs
p5 <- f1_reg(m = frog_pcm, pred = "surf_lm", type = "state", lpos = "none",
ylab = "Frog Abundance", xlab = "Lake Surface (log sq meters)")
p6 <- f1_reg(m = frog_pcm, pred = "depth", type = "state", lpos = "none",
ylab = NULL, xlab = "Depth (meters)")
p <- plot_grid(p1, p2, p3, p4, p5, p6,
ncol = 2, align = "vh")
save_plot("Figures/ME_abund.png", p,
base_height = 8, base_width = 6, dpi = 600)
library(tidyverse)
library(unmarked)
## read in data
load("Data/Intermediate/egg_umf.Rdata")
# summary(eggs_cnt_um)
m2.nb <- pcount(~ julian + julian2 + offset(stime)
~ depth + surf_lm + fish,
data = eggs_cnt_um, mixture = "NB")
str(eggs_cnt_um)
load("Data/Intermediate/Prepped.RData")
eggs_obs <- filter(obs, year < 2009) %>%
select(year, julian, lake = site, total_time, eggs) %>%
merge(unique(sc.orig[,c("lake", "surf_mean")]), by = "lake", all.x = T)
head(eggs_obs)
load("Data/Intermediate/Prepped.RData")
eggs_obs <- filter(obs, year < 2009) %>%
select(year, julian, lake = site, total_time, eggs) %>%
merge(unique(sc.orig[,c("lake", "surf_mean")]), by = "lake", all.x = T) %>%
mutate(lake = factor(lake), #Treat as categorical
effort = log(total_time+1) / log(surf_mean), #add one minute bc of zero times
julian = as.integer(julian)) %>%
## Assign visit (secondary sampling period) order for each year x lake
group_by(year, lake) %>%
arrange(julian) %>%
mutate(visit = row_number()) %>%
arrange(year, lake, visit) %>% # don't need these for the model
ungroup()
## filter by last day eggs were ever observed
last <- filter(eggs_obs, eggs > 0) %>%
summarise(max(julian)) %>%
pull()
eggs_obs <- filter(eggs_obs, julian <= last)
## Spread observation data
eggs_obs_w <- select(eggs_obs, lake, year, visit, eggs) %>%
spread(key = visit, value = eggs) %>%
arrange(lake, year)
## Same for observation covariates
julian <- select(eggs_obs, lake, year, visit, julian) %>%
mutate(julian = scale(julian)) %>% #standardize for modeling
spread(key = visit, value = julian)
effort <- select(eggs_obs, lake, year, visit, effort) %>%
mutate(effort = scale(effort)) %>% #standardize for modeling
spread(key = visit, value = effort)
stime <- select(eggs_obs, lake, year, visit, total_time) %>%
mutate(stime = log(total_time + 1),
stime = scale(stime)) %>%
select(-total_time) %>% #standardize for modeling
spread(key = visit, value = stime)
## line up site covs
eggs_sc <- select(eggs_obs_w, lake, year) %>%
merge(sc.stand, all.x = T) %>%
arrange(lake, year) %>%
mutate(year = factor(year))
head(eggs_sc)
head(effort)
rm(list=ls())
## Read in data
load("Data/Intermediate/Prepped.RData")
head(sc.stand)
head(sc.stand)
library(tidyverse)
library(unmarked)
library(cowplot)
## Bring in models
load("Models/egg_mod.RData")
load("Models/larv_mod.RData")
load("Models/frog_pc_mod.RData")
sc.stand <- select(sc.stand, year, lake, fish, #depth,
surf_lm) %>%
## Get year factors to match
mutate(year = 2000,
year = factor(year, levels(factor(frog_pcm@data@siteCovs$year))),
## predictions for mean basin drying (i.e 33% original)
pbasin1_dry = 0) %>%
unique()
sc.s.egg <- mutate(sc.stand,
year = factor(year, levels(factor(egg_m@data@siteCovs$year))))
## Make predictions to actual lakes
pred_real <- predict(egg_m, sc.s.egg, type = "state")
pred_real2 <- predict(larv_m, sc.stand, type = "state")
pred_real3 <- predict(frog_pcm, sc.stand, type = "state")
## Get summary stats for observations
mn_obs <- group_by(eggs_obs, lake, year) %>%
summarise(max_cnt = max(eggs)) %>%
group_by(lake) %>%
summarise(mean_naive = mean(max_cnt),
min_naive = min(max_cnt),
max_naive = max(max_cnt))
mn_obs2 <- group_by(larvae_obs, lake, year) %>%
summarise(max_cnt = max(larvae)) %>%
group_by(lake) %>%
summarise(mean_naive = mean(max_cnt),
min_naive = min(max_cnt),
max_naive = max(max_cnt))
mn_obs3 <- group_by(frogs_pc_obs, lake, year) %>%
summarise(max_cnt = max(frogs)) %>%
group_by(lake) %>%
summarise(mean_naive = mean(max_cnt, na.rm = T),
min_naive = min(max_cnt, na.rm = T),
max_naive = max(max_cnt, na.rm = T))
plot_data0 <- select(sc.s.egg, lake, fish) %>%
cbind(pred_real) %>%
unique() %>%
merge(mn_obs) %>%
mutate(stage = "eggs",
upper = ifelse(upper > max(pred_real$Predicted),
max(pred_real$Predicted), upper))
plot_data2 <- select(sc.stand, lake, fish) %>%
cbind(pred_real2) %>%
unique() %>%
merge(mn_obs2) %>%
mutate(stage = "larvae",
upper = ifelse(upper > max(pred_real2$Predicted),
max(pred_real2$Predicted), upper))
plot_data3 <- select(sc.stand, lake, fish) %>%
cbind(pred_real3) %>%
unique() %>%
merge(mn_obs3) %>%
mutate(stage = "frogs",
upper = ifelse(upper > max(pred_real3$Predicted),
max(pred_real3$Predicted), upper))
plot_data <- bind_rows(plot_data0, plot_data2, plot_data3) %>%
mutate(lake = factor(lake),
stage = factor(stage, levels = c("eggs", "larvae", "frogs"),
labels = c("Eggs", "Tadpoles", "Frogs")))
p1 <- ggplot(plot_data, aes(lake, Predicted, color = factor(fish))) +
facet_wrap(~factor(stage), ncol = 3, scales = "free") +
geom_errorbar(aes(ymin=lower, ymax=upper), size = 2, width=0, alpha=0.5) +
geom_point(shape=19, alpha=0.9, size=4) +
scale_color_manual(name = "Fish Present",
breaks = c(0, 1),
labels = c("No", "Yes"),
values = c("steelblue", "grey70")) +
theme_bw() +
theme(legend.position = "top", #c(0.1,-.15),
legend.direction = "horizontal",
text = element_text(size = 10), title = element_text(size = 10),
axis.text = element_text(size = 10)) +
ylab("Predicted Abundance") + xlab("Lake Number") +
coord_flip()
## Add surface area and depth values
covs <- select(sc.orig, lake, proplake_dry, depth, surf_lm) %>%
unique() %>%
mutate(lake = factor(lake)) %>%
gather(key = attribute, value = value, -lake) %>%
mutate(attribute = factor(attribute,
levels = c("surf_lm", "depth", "proplake_dry"),
labels = c("Area (sq m)", "Depth (m)", "Prop Dry Yrs")))
p2 <- ggplot(covs, aes(x = lake, y = value)) +
facet_wrap(~factor(attribute), ncol = 3, scales = "free") +
geom_bar(stat = "identity") +
xlab("Lake Number") +
ylab(NULL) +
theme(text = element_text(size = 12), title = element_text(size = 12),
axis.text = element_text(size = 10)) +
coord_flip()
p1
p1 <- ggplot(plot_data, aes(lake, Predicted, color = factor(fish))) +
facet_wrap(~factor(stage), ncol = 3, scales = "free") +
geom_errorbar(aes(ymin=lower, ymax=upper), size = 2, width=0, alpha=0.5) +
geom_point(shape=19, alpha=0.9, size=4) +
scale_color_manual(name = "Fish Present",
breaks = c(0, 1),
labels = c("No", "Yes"),
values = c("steelblue", "grey70")) +
theme_bw() +
theme(legend.position = "top", #c(0.1,-.15),
legend.direction = "horizontal",
text = element_text(size = 12), title = element_text(size = 12),
axis.text = element_text(size = 12)) +
ylab("Predicted abundance") + xlab("Lake number") +
coord_flip()
## Add surface area and depth values
covs <- select(sc.orig, lake, proplake_dry, depth, surf_lm) %>%
unique() %>%
mutate(lake = factor(lake)) %>%
gather(key = attribute, value = value, -lake) %>%
mutate(attribute = factor(attribute,
levels = c("surf_lm", "depth", "proplake_dry"),
labels = c("Area (sq m)", "Depth (m)", "Prop Dry Yrs")))
p2 <- ggplot(covs, aes(x = lake, y = value)) +
facet_wrap(~factor(attribute), ncol = 3, scales = "free") +
geom_bar(stat = "identity") +
xlab("Lake number") +
ylab(NULL) +
theme_bw() +
theme(text = element_text(size = 12), title = element_text(size = 12),
axis.text = element_text(size = 12)) +
coord_flip()
pg <- plot_grid(p1, p2, ncol = 1)
pg
p1 <- ggplot(plot_data, aes(lake, Predicted, color = factor(fish))) +
facet_wrap(~factor(stage), ncol = 3, scales = "free") +
geom_errorbar(aes(ymin=lower, ymax=upper), size = 2, width=0, alpha=0.5) +
geom_point(shape=19, alpha=0.9, size=4) +
scale_color_manual(name = "Fish present",
breaks = c(0, 1),
labels = c("No", "Yes"),
values = c("steelblue", "grey70")) +
theme_bw() +
theme(#legend.position = "top", #c(0.1,-.15),
#legend.direction = "horizontal",
legend.position = c(.99, .99),
legend.justification = c(1,1),
text = element_text(size = 12), title = element_text(size = 12),
axis.text = element_text(size = 12)) +
ylab("Predicted abundance") + xlab("Lake number") +
coord_flip()
p1
pg <- plot_grid(p1, p2, ncol = 1)
pg
?save_plot
?ggsave2
save_plot("Figures/Figure4.tif", base_width = 8, base_height = 8)
save_plot("Figures/Figure4.tiff", base_width = 8, base_height = 8)
save_plot("Figures/Figure4.tiff", pg, base_width = 8, base_height = 8)
dev.off()
save_plot("Figures/Figure4.tiff", pg, base_width = 8, base_height = 8)
save_plot("Figures/Figure4.tiff", pg, base_width = 8, base_height = 8)
pg <- plot_grid(p1, p2, ncol = 1, labels = c("A)", "B)"))
save_plot("Figures/Figure4.tiff", pg, base_width = 8, base_height = 7)
pg <- plot_grid(p1, p2, ncol = 1, labels = c("A)", "B)"), rel_heights = c(1.1, 1))
save_plot("Figures/Figure4.tiff", pg, base_width = 8, base_height = 6)
covs <- select(sc.orig, lake, proplake_dry, depth, surf_lm) %>%
unique() %>%
mutate(lake = factor(lake)) %>%
gather(key = attribute, value = value, -lake) %>%
mutate(attribute = factor(attribute,
levels = c("surf_lm", "depth", "proplake_dry"),
labels = c("Area (log sq m)", "Depth (m)", "Prop Dry Yrs")))
p2 <- ggplot(covs, aes(x = lake, y = value)) +
facet_wrap(~factor(attribute), ncol = 3, scales = "free") +
geom_bar(stat = "identity") +
xlab("Lake number") +
ylab(NULL) +
theme_bw() +
theme(text = element_text(size = 12), title = element_text(size = 12),
axis.text = element_text(size = 12)) +
coord_flip()
pg <- plot_grid(p1, p2, ncol = 1, labels = c("A)", "B)"), rel_heights = c(1.1, 1))
save_plot("Figures/Figure4.tiff", pg, base_width = 8, base_height = 6)
